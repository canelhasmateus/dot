""" Map leader to space ---------------------
let mapleader=" "

""" Plugins  --------------------------------
""" set multiple-cursors
set commentary
set surround
set argtextobj
set textobj-entire

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"

""" Common settings -------------------------
set number relativenumber
set visualbell
set noerrorbells

set incsearch
set showmode
set so=0
set ignorecase
set nu

set easymotion
let g:EasyMotion_do_mapping = 0

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep
set clipboard+=unnamed

""" Handler --------------------------------
sethandler <ESC> a:ide
sethandler <C-x> a:ide
sethandler <A-F> a:ide
sethandler <A-S> a:ide
sethandler <A-f> a:ide
sethandler <C-I> a:ide
sethandler <C-B> a:ide
sethandler <C-L> a:ide
sethandler <A-N> a:ide
sethandler <C-P> a:ide
sethandler <C-R> a:ide
sethandler <C-U> a:ide
sethandler <A-X> a:ide
sethandler <C-\> a:ide
sethandler <M-F> a:ide
sethandler <M-n> a:ide
sethandler <C-w> a:ide
sethandler <C-D> a:ide
sethandler <C-c> a:ide
sethandler <C-s> a:ide
sethandler <C-]> a:ide
sethandler <C-[> a:ide
sethandler <C-v> i:ide n-v:vim
sethandler <C-A> i:ide n-v:vim



""" Base Bindings
nnoremap <Del> "adl
vnoremap <Del> "ad
nnoremap <Enter> i<Enter><ESC>
nnoremap <Backspace> "adh
vnoremap <Backspace> "adh

nnoremap a <Nop>
nnoremap i <Nop>
nnoremap x <Nop>
nnoremap s <Nop>
nnoremap r <Nop>

nnoremap cl "act
nnoremap cj "acT
nnoremap ck "acl
nnoremap dl "adt
nnoremap dj "adT
nnoremap vl vf
nnoremap vj vF
nnoremap oo o
nnoremap vv V

nnoremap dip "adipi<Enter><Esc>
nnoremap viv g^vg_

""" Extend-Layer

nnoremap <leader>i i
vnoremap <leader>i <Esc>i
nnoremap i k
nnoremap k j
nnoremap j h
nnoremap h ^
nnoremap รง $

nnoremap <Tab> >
nnoremap <S-Tab> <

nnoremap <Home> ^
nnoremap <C-Home> ^
nnoremap <C-S-Home> v^
nnoremap <S-Home> v^

nnoremap <End> $
nnoremap <C-End> $
nnoremap <C-S-End> v$
nnoremap <S-End> v$


nnoremap <S-Up> vk
nnoremap <S-Right> vl
nnoremap <S-Down> vj
nnoremap <S-Left> vh

inoremap <Home> <Esc>^i
inoremap <C-Home> <Esc>^i
inoremap <C-S-Home> <Esc>g^i
inoremap <S-Home> <Esc>g^i

inoremap <End> <Esc>$a
inoremap <C-End> <Esc>$a
inoremap <C-S-End> <Esc>lv$a
inoremap <S-End> <Esc>lv$

inoremap <S-Up> <Esc>vk
inoremap <S-Right> <Esc>vl
inoremap <S-Down> <Esc>vj
inoremap <S-Left> <Esc>vh

vnoremap <Tab> >>
vnoremap <Tab> <<

vnoremap <Home> ^
vnoremap <C-Home> ^
vnoremap <C-S-Home> ^
vnoremap <S-Home> ^

vnoremap <End> $
dnoremap <C-End> $
dnoremap <C-S-End> $
vnoremap <S-End> $

vnoremap <Backspace> "ad
vnoremap <Up> k
vnoremap <S-Up> k
vnoremap <Down> j
vnoremap <S-Down> j
vnoremap <Left> h
vnoremap <S-Left> h
vnoremap <Right> l
vnoremap <S-Right> l



""" -----------------------------------------------

""" Code
map xo <Action>(OverrideMethods)
map xj <Action>(HippieCompletion)
map xl <Action>(HippieBackwardCompletion)
map x1 <Action>(ExpandAllToLevel1)
map x2 <Action>(ExpandAllToLevel2)
map x3 <Action>(ExpandAllToLevel3)
map xt <Action>(ImplementMethods)
nnoremap x. zo
nnoremap x, zc
nnoremap x0 zM
"""nnoremap xk ]m
"""nnoremap xi [m
map xi <Action>(MethodUp)
map xk <Action>(MethodDown)
""" Surround / Context
map st <Action>(InsertLiveTemplate)
map ss <Action>(SurroundWith)
map su <Action>(Unwrap)
map si <Action>(EditorSelectWord)
map sk <Action>(EditorUnSelectWord)

""" Refactoring
nnoremap rr gq
vnoremap rr gq
map ra <Action>(IntroduceField)
map rd <Action>(EditorDuplicate)
map rn <leader>i<Action>(RenameElement)
map ri <Action>(Inline)
map rv <Action>(IntroduceVariable)
map ro <Action>(OptimizeImports)
map rk <Action>(IntroduceConstant)
map ru <Action>(EditorToggleCase)

""" Quick commands --------------------------
nnoremap qd K
nnoremap qe zz
map qw <Action>(ShowErrorDescription)
map qh <Action>(GotoPreviousError)
map qรง <Action>(GotoNextError)

map ql <Action>(Forward)
map qj <Action>(Back)
"""nnoremap ql <C-I>
"""nnoremap qj <C-O>

"""map qi<Action>(PartialPageNav.PageUp)
"""map qk <Action>(PartialPageNav.PageDown)
nnoremap qq <Esc>
nnoremap qi <C-U>
nnoremap qk <C-D>
nnoremap qu {
nnoremap qp }
nnoremap qo %

""" Window
map <leader>w<A-p> <Action>(SelectInProjectView)
map <leader>wp <Action>(ActivateProjectToolWindow)
map <leader>wr <Action>(IdeaVim.ReloadVimRc.reload)
map <leader>vim :e ~\.ideavimrc<CR>

""" Open
map or <Action>(RecentFiles)
map ox <Action>(FileStructurePopup)

""" Navigation
nnoremap nn n
map nf <Action>(GotoFile)
map nc <Action>(GotoClass)
map ns <Action>(GotoSymbol)
map nd gD
map nj <Action>(JumpToLastChange)
map nl <Action>(JumpToLastChange)

""" Search ---------------------------------------------------

""" Easy Motion
map <leader>ff <Action>(Find)
map fq <Plug>(easymotion-bd-jk)
map fl <Plug>(easymotion-w)
map fj <Plug>(easymotion-b)
map f<Space> <Plug>(easymotion-bd-t)

noremap fk *
noremap fi #
noremap ff f

""" end of Word / CamelCase
nnoremap ee e
nnoremap ei ea
nnoremap ea ea
nnoremap ai a



nnoremap cie ciw
""" Experimental -----------------------------------------


""" Seek Aheads ----------------------------------

nnoremap D dt
nnoremap C ct
nnoremap DD D
""" seek ahead camel case
nnoremap me [w
nnoremap mE [b
nnoremap vie :let @a="]wv[b"<CR>@a
nnoremap cie ]wv[bc

""" seek ahead: next square
nnoremap mi :let @a="/[\rvi["<CR>@a
nnoremap mI :let @a="?]\rvi["<CR>@a

""" seek ahead: next curly
nnoremap ms :let @a="/{\rvi{"<CR>@a
nnoremap mS :let @a="?}\rvi{"<CR>@a

""" seek ahead: next paren
nnoremap mp :let @a="/(\rvi("<CR>@a
nnoremap mP :let @a="?)\rvi("<CR>@a

""" next var
nnoremap mv :let @a="/=\rvg^"<CR>@a
nnoremap mV :let @a="?=\rvg^"<CR>@a

""" next assignment
nnoremap ma :let @a="/=\rlvg_"<CR>@a
nnoremap mA :let @a="?=\rlvg_"<CR>@a

""" seek ahead: generic
nnoremap mt :let @a="/>\rvi>"<CR>@a
nnoremap mT :let @a="?<\rvi>"<CR>@a

""" next call
nnoremap mc :let @a="/(\r%v%B"<CR>@a
nnoremap mC :let @a="?)\r%v%B"<CR>@a

""" next callee
nnoremap mk :let @a="/(\rjvB"<CR>@a
nnoremap mK :let @a="?(\rjvB"<CR>@a

""" seek ahead: next quote
nnoremap mq :let @a="/\"\rvi\""<CR>@a
nnoremap mQ :let @a="?\"\rvi\""<CR>@a


""""todo: next unmatched


vnoremap . <Esc>`<@@


""" bring back
vnoremap <Leader>qj "ad``"aP
nnoremap <Leader>qj V"ad``"aP





""" todo: What exactly is a paragraph?
""" todo: What exactly is a sentence
""" todo: What exactly is a section



nnoremap <leader>. @@

""" select all scope
nnoremap <leader>sa va}
nnoremap <leader>si vi}
nnoremap <leader>ss va}^$o^



""" todo quickscope
""" todo multiple cursors
""" todo visual P swap


vnoremap p "ad<Esc>p

map rsp vip<Action>(EditorSortLines)
