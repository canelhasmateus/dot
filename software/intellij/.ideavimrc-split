:source ~/.vimrc

Plug 'michaeljsmith/vim-ident-object'
Plug 'tpope/vim-surround'
Plug 'easymotion/vim-easymotion'
let g:EasyMotion_do_mapping = 0

Plug 'machakann/vim-highlightedyank'
let g:highlightedyank_highlight_duration = "1000"
let g:highlightedyank_highlight_color = "rgba(100, 160, 100, 100)"

"""Plug 'preservim/nerdtree'
"""Plug 'terryma/vim-multiple-cursor'
"""Plug 'tpope/vim-commentary'
"""Plug 'vim-scripts/ReplaceWithRegisters
"""Plug 'vim-scripts/argtextobj.vim'
"""let g:argtextobj_pairs="[:],(:),<:>"
"""set sneak
"""quickscope
"""let g:match_words = '<:>,<tag>:</tag>'

set ideamarks
set ideajoin
set idearefactormode=select
set incsearch!

sethandler <ESC> a:ide
sethandler <C-x> a:ide
sethandler <A-F> a:ide
sethandler <A-S> a:ide
sethandler <A-e> a:ide
sethandler <A-E> a:ide
sethandler <M-e> a:ide
sethandler <M-E> a:ide
sethandler <A-f> a:ide
sethandler <C-I> a:ide
sethandler <C-B> a:ide
sethandler <C-L> a:ide
sethandler <A-N> a:ide
sethandler <C-P> a:ide
sethandler <C-R> a:ide
sethandler <C-U> a:ide
sethandler <A-X> a:ide
sethandler <C-\> a:ide
sethandler <M-F> a:ide
sethandler <M-n> a:ide
sethandler <C-w> a:ide
sethandler <C-D> a:ide
sethandler <C-c> a:ide
sethandler <C-s> a:ide
sethandler <C-]> a:ide
sethandler <C-[> a:ide
sethandler <C-v> a:ide
sethandler <C-A> a:ide

sethandler <M-A> a:ide
sethandler <A-Right> a:vim
sethandler <S-A-Right> a:vim
sethandler <A-Left> a:vim
sethandler <S-A-Left> a:vim

""" Overrides ------------------------------------------------

map I <Action>(EditorSelectWord)
map K <Action>(EditorUnSelectWord)

"" ____________________ [Q] prefix controls [Q]uick commands

Plug 'chrisbra/matchit'
Plug 'dbakker/vim-paragraph-motion'

map qo <Plug>(MatchitMotion)
map qO <Plug>(ReverseMatchitMotion)

map qu <Plug>(ParagraphPrevMotion)
map qp <Plug>(ParagraphNextMotion)

map qh <Action>(GotoPreviousError)
map qç <Action>(GotoNextError)

map qj <Action>(Back)
map ql <Action>(Forward)
map qJ <Action>(JumpToLastChange)
map qL <Action>(JumpToNextChange)

map qd <Action>(CompareTwoFiles)

"todo quick evaluate expression map qe <Action>(...)

""" ____________________ [W] prefix is for [W]ord movement

""" ____________________ [E] prefix controls [E]dit cursor

""" ____________________ [R] prefix controls [R]efactoring

map rf <Action>(ExtractMethod)
map rv <Action>(IntroduceVariable)
map rk <Action>(IntroduceConstant)
map ra <Action>(IntroduceField)
map ri <Action>(Inline)
map r<Del> <Action>(SafeDelete)
map rs <Action>(ChangeSignature)
map rn <Action>(RenameElement)
map rm <Action>(Move)

map rd <Action>(EditorDuplicate)
map rj <Action>(EditorJoinLines)
map ru <Action>(EditorToggleCase)
map ro <Action>(OptimizeImports)
map rr <Action>(ReformatCode)

vnoremap r. :s/)\./)\r./g<CR>:action ReformatCode<CR>
vnoremap r, :s/,/,\r/g<CR>:action ReformatCode<CR>

""" ____________________ [T] prefix is unmodified

""" ____________________ [Y] prefix is for yanking

""" ____________________ [U] prefix is unmodified

""" ____________________ [I] prefix is directional

""" ____________________ [O] prefix controls [O]pening of popups

map op <Action>(PasteMultiple)

map oe <Action>(RecentChangedFiles)
map or <Action>(RecentFiles)
map om <Action>($LRU)
map ox <Action>(FileStructurePopup)
map ol <Action>(RecentLocations)
map oq <Action>(ShowBookmarks)

""" ____________________ [P] prefix controls [P]asting

""" __________________________________________________________________________________________________________________________________________________

""" ____________________ [A] prefix is Undetermined

""" ____________________ [S] Prefix Controls [S]elections and [S]urround 

set multicursor
nnoremap mc <Nop>
vnoremap mc <Nop>
nnoremap ms <Nop>
vnoremap ms <Nop>


map ss <Action>(SurroundWith)
map su <Action>(Unwrap)

vmap / <Plug>(multicursor-ms/)
vmap sh <C-V>v<Plug>(multicursor-ms^)
vmap sç <C-V>V<Plug>(multicursor-ms$)
vmap sc <Plug>(multicursor-msgU)

vmap sw <Plug>(multicursor-msgU)
vmap sW <Plug>(multicursor-msgU)
vmap se <Plug>(multicursor-msgU)
vmap sE <Plug>(multicursor-msgU)
""map <leader>aa <Plug>(multicursor-mcr)
vmap <leader>sE <Plug>(multicursor-msE)
vmap <leader>sF <Plug>(multicursor-msF)
vmap <leader>sT <Plug>(multicursor-msT)
vmap <leader>se <Plug>(multicursor-mse)
vmap <leader>su <Plug>(multicursor-msgu)
vmap <leader>st <Plug>(multicursor-mst)

""" ____________________ [D] Prefix Controls [D]eletions

""" ____________________ [F] Prefix Controls [F]ind

Plug 'easymotion/vim-easymotion'
let g:EasyMotion_do_mapping = 0

map <A-f><A-f> <Action>(Find)
map <A-f><f> <Action>(Find)
map fp <Plug>(easymotion-jumptoanywhere)

map fl <Plug>(easymotion-w)
map fj <Plug>(easymotion-b)
map fç <Plug>(easymotion-eol-j)
map fh <Plug>(easymotion-sol-k)

map fL <Plug>(easymotion-e)
map fJ <Plug>(easymotion-ge)
map fÇ <Plug>(easymotion-sol-j)
map fH <Plug>(easymotion-eol-k)

"""map f. <Plug>(easymotion-bd-n)

""" ____________________ [G] Prefix is undefined

"Doesn't work for some reason
"map gi <Action>(PreviousDiff)
"map gk <Action>(NextDiff)

map gi <Action>(VcsShowPrevChangeMarker)
map gk <Action>(VcsShowNextChangeMarker)
map gu <Action>(Vcs.RollbackChangedLines)
map gl <Action>(Vcs.MoveChangedLinesToChangelist)
map gd <Action>(Vcs.ShowDiffChangedLines)
map gc <Action>(ShowBlankDiffWindow)
"Majera.CodeReview.Bitbucket.LeaveCommentForLineAction
"Majera.CodeReview.Bitbucket.ShowContextPullRequestFileDiff
"ActivateBitbucketPullRequestsToolWindow

""" ____________________ [H] Prefix is directional ( Home )
""" ____________________ [J] Prefix is directional ( Left )
""" ____________________ [K] Prefix is directional ( Down )
""" ____________________ [L] Prefix is directional ( Right )
""" ____________________ [Ç] Prefix is directional ( End )


"""___________________________________________________________________________________________________________________________________________________

""" ________________________________ [Z] prefix controls [Z]ooming, [Z]ips and Scroll

map zm <Action>(NextSplitter)
map zM <Action>(PrevSplitter)

map z> <Action>(SplitVertically)
map z< <Action>(Unsplit)
map zo <Action>(ChangeSplitOrientation)
map z<Backspace> <Action>(UnsplitAll)
map z<C-Backspace> <Action>(UnsplitAll)

""" ________________________________ [X] prefix controls code stuff

Plug 'tommcdo/vim-exchange'

vmap xx <Plug>(Exchange)

map xi <Action>(MethodUp)
map xk <Action>(MethodDown)

map x1 <Action>(ExpandAllToLevel1)
map x2 <Action>(ExpandAllToLevel2)
map x3 <Action>(ExpandAllToLevel3)

" Experimental

vmap xj <Action>(CollapseSelection)
vmap xl <Action>(GotoCustomRegion)

map xc <Action>(CallHierarchy)
map xm <Action>(MethodHierarchy)

"""todo a quick list of some actions map xo <>
"""todo complete current statement
"""todo better templates
"""todo better postfixes
"""todo create emmet engine for other languages

map xI <Action>(RunInspection)
map xK <Action>(InsertLiveTemplate)

map xv <Action>(ImportTests)
map xr <Action>(ShowRecentTests)

""" ________________________________ [C] prefix controls [C]hanging

""" ________________________________ [V] prefix controls [V]isual selections

Plug 'terryma/vim-multiple-cursors'

vmap v<Del> <Plug>SkipOccurrence
vmap vd <Plug>SkipOccurrence
vmap v<Backspace> <Plug>RemoveOccurrence
vmap vi <Plug>RemoveOccurrence
vmap vI <Esc><Esc>
vmap vk <Plug>NextOccurrence
vmap vK <Plug>AllOccurrences

""" ________________________________ [B] prefix is unmodified

""" ________________________________ [N] prefix controls [N]avigation

" remember: nnoremap nn n
map nc <Action>(GotoClass)
map nf <Action>(GotoFile)
map ns <Action>(GotoSymbol)
map nl <Action>(GotoLine)

map nt <Action>(GotoTest)
map nd <Action>(GotoDeclaration)
map nD <Action>(GotoTypeDeclaration)
map ni <Action>(GotoImplementation)
map nS <Action>(GotoSuperMethod)
map nr <Action>(GotoRelated)

map nu <Action>(ShowUsages)

""" ________________________________ [M] prefix controls [M]ovements

"""___________________________________________________________________________________________________________________________________________________

""" Experimental -----------------------------------------

map rt <Action>(MembersPullUp)
map rxi <Action>(ImplementMethods)
map rxo <Action>(OverrideMethods)
map rxd <Action>(DelegateMethods)

map of <Action>(StructuralSearchPlugin.StructuralSearchAction)
"todo map ofr <Action>(StructuralSearchPlugin.StructuralReplaceAction)
"todo map ofp <Action>(FindInPath)

map os <Action>(ChooseRunConfiguration)

map qe <Action>(QuickEvaluateExpression)
map qw <Action>(EvaluateExpression)


"""todo ShowRecentTests
"""todo RecentChanges
"""todo map oh <Action>(ProductivityGuide)
"""todo map os <Action>(ActivateTerminalToolWindow)
"""todo map ot <Action>(Rest Client)
"""todo map ot <Action>(Quick Swithc scheme)
"""todo EditBreakpoint
"""todo ViewBreakpoints
"""todo evaluate expression
"""todo ActivateBitbucketPullRequestsToolWindow

""" Meta -------------------------------------------------

map <leader>vii :e ~/.vimrc<CR>
map <leader>vim :e ~/.ideavimrc<CR>
map <leader>wr <Action>(IdeaVim.ReloadVimRc.reload)
map gl <Action>(ChangesView.Move)
map g> <Action>(Diff.ApplyLeftSide)


map ti <Action>(NotebookSelectCellAboveAction)
map tk <Action>(NotebookSelectCellBelowAction)

map tI <Action>(NotebookInsertCellAboveAction)
map tK <Action>(NotebookInsertCellBelowAction)

map td <Action>(NotebookDeleteCellAction)
map tt <Action>(JupyterConvertCellActions)
map tx <Action>(NotebookSplitCellAction)
map tX <Action>(NotebookMergeCellAboveAction)

map <leader><leader<leader><leader><leader><leader>7 <Esc>
